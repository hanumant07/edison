/*
 * Module for managing alarm state machine
 */

var child_process = require('child_process');

function alarm () {
	this.alarm_on_audio = "mplayer /home/jarvis/alarm/audio/alarm_server_on.m4a";
	this.alarm_off_audio = "mplayer /home/jarvis/alarm/audio/alarm_server_off.m4a";
	this.alarm_on_already_audio = "mplayer /home/jarvis/alarm/audio/alarm_already_on.m4a";
	this.unknown_command_audio = "mplayer /home/jarvis/alarm/audio/unknown_command.m4a";
	this.alarm_off_already_audio = "mplayer /home/jarvis/alarm/audio/alarm_already_off.m4a";
	this.alarm_on = false;
	this.alarm_ps = null;
};

alarm.prototype.turn_on = function() {
	this.alarm_ps = child_process.spawn("motion");
	var audio = child_process.exec(this.alarm_on_audio, function(err, stdout, stderr) {});
	this.alarm_on = true;	
}

alarm.prototype.turn_off = function() {
	this.alarm_ps.kill('SIGINT');
	var audio = child_process.exec(this.alarm_off_audio, function(err, stdout, stderr) {});
	this.alarm_on = false;
}

alarm.prototype.process_command = function(command) {
	if (command === "on" && !this.alarm_on)
		this.turn_on();
	else if (command === "on" && this.alarm_on)
		var audio = child_process.exec(this.alarm_on_already_audio, function(err, stdout, stderr) {});
	else if (command === "off" && this.alarm_on)
		this.turn_off();
	else if (command === "off" && !this.alarm_on)
		var audio = child_process.exec(this.alarm_off_already_audio, function(err, stdout, stderr) {});
	else
		var audio = child_process.exec(this.unknown_command_audio, function(err, stdout, stderr) {});
}

module.exports = alarm;
